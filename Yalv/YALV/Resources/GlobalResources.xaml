<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <!--  BACKGROUND  -->
    <LinearGradientBrush x:Key="DefaultGradientBackground" PresentationOptions:Freeze="True" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="WhiteSmoke" />
        <GradientStop Offset="0.2" Color="AliceBlue" />
        <GradientStop Offset="1.0" Color="WhiteSmoke" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GrayGradientBackground" PresentationOptions:Freeze="True" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#AAA" />
        <GradientStop Offset="0.5" Color="#BBB" />
        <GradientStop Offset="1.0" Color="#BFBFBF" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="DarkGradientBackground" PresentationOptions:Freeze="True" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#10105D" />
        <GradientStop Offset="0.4" Color="#5262AE" />
        <GradientStop Offset="1.0" Color="#7079A4" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="WhiteBackground" Color="White" />

    <!--  COLORS  -->
    <SolidColorBrush
        x:Key="DefaultForegroundColor"
        PresentationOptions:Freeze="True"
        Color="#FF272727" />
    <SolidColorBrush
        x:Key="BorderColor"
        PresentationOptions:Freeze="True"
        Color="White" />

    <!--  LEVEL COLORS  -->
    <SolidColorBrush
        x:Key="DebugLevelColor"
        PresentationOptions:Freeze="True"
        Color="LightBlue" />
    <SolidColorBrush
        x:Key="InfoLevelColor"
        PresentationOptions:Freeze="True"
        Color="LightGreen" />
    <SolidColorBrush
        x:Key="WarnLevelColor"
        PresentationOptions:Freeze="True"
        Color="Moccasin" />
    <SolidColorBrush
        x:Key="ErrorLevelColor"
        PresentationOptions:Freeze="True"
        Color="Salmon" />
    <SolidColorBrush
        x:Key="FatalLevelColor"
        PresentationOptions:Freeze="True"
        Color="Crimson" />

    <!--  IMAGES  -->
    <BitmapImage
        x:Key="imgWindowIcon"
        PresentationOptions:Freeze="True"
        UriSource="Icons/app.ico" />

    <!--  FONT  -->
    <FontFamily x:Key="DefaultFontFamily">
        <!--  Arial  -->
        <!--  Calibri  -->
        <!--  Georgia  -->
        <!--  Helvetica  -->
        <!--  Lucida Sans  -->
        Segoe UI
        <!--  Times New Roman  -->
        <!--  Verdana  -->
    </FontFamily>

    <!--  FONTSIZE  -->
    <sys:Double x:Key="DefaultFontSize">12</sys:Double>

    <!--  WINDOW  -->
    <Style x:Key="DefaultWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Control.FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Linear" />
        <Setter Property="Background" Value="{StaticResource WhiteBackground}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
        <Setter Property="Window.ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Window.Icon" Value="{StaticResource imgWindowIcon}" />
    </Style>

    <Style x:Key="DefaultBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="2" />
    </Style>

    <!--  TOOLBAR  -->
    <Style x:Key="DefaultToolbarStyle" TargetType="{x:Type ToolBar}">
        <Setter Property="ToolBarTray.IsLocked" Value="True" />
        <Setter Property="FocusManager.IsFocusScope" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!--  GRIDSPLITTER  -->
    <Style x:Key="DefaultGridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="Background" Value="#15000000" />
        <Setter Property="BorderBrush" Value="Silver" />
        <Style.Triggers>
            <Trigger Property="ResizeDirection" Value="Columns">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Width" Value="5" />
            </Trigger>
            <Trigger Property="ResizeDirection" Value="Rows">
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Height" Value="5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  DATAGRID  -->
    <Style x:Key="DefaultDataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowHeight" Value="20" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="VerticalGridLinesBrush" Value="#8C6C6C6C" />
        <Setter Property="HorizontalGridLinesBrush" Value="White" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="SelectionUnit" Value="FullRow" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeColumns" Value="True" />
        <Setter Property="CanUserSortColumns" Value="True" />
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
        <Style.Triggers>
            <Trigger Property="HeadersVisibility" Value="Column">
                <!--  Workaround datagrid bug; refs: http://wpf.codeplex.com/discussions/47047  -->
                <Setter Property="RowHeaderWidth" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultDataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}" />
        <Setter Property="Background" Value="{StaticResource GrayGradientBackground}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsClickable="{TemplateBinding CanUserSort}"
                            IsHovered="{TemplateBinding IsMouseOver}"
                            IsPressed="{TemplateBinding IsPressed}"
                            SeparatorBrush="{TemplateBinding SeparatorBrush}"
                            SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                            SortDirection="{TemplateBinding SortDirection}">
                            <Grid>
                                <ContentPresenter
                                    x:Name="PART_ContentPresenter"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Path
                                    x:Name="SortArrow"
                                    Width="8"
                                    Height="6"
                                    Margin="2,1,2,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Data="M0,0 L1,0 0.5,1 z"
                                    Fill="White"
                                    Opacity="0.5"
                                    RenderTransformOrigin="0.5,0.4"
                                    Stretch="Fill"
                                    Visibility="Collapsed" />
                            </Grid>
                        </Themes:DataGridHeaderBorder>
                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource DefaultColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource DefaultColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HorizontalContentAlignment" Value="Left">
                            <Setter TargetName="PART_ContentPresenter" Property="Margin" Value="3,0,0,0" />
                        </Trigger>
                        <Trigger Property="HorizontalContentAlignment" Value="Right">
                            <Setter TargetName="PART_ContentPresenter" Property="Margin" Value="0,0,3,0" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultDataGridCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="CenterDataGridCellStyle"
        BasedOn="{StaticResource DefaultDataGridCellStyle}"
        TargetType="DataGridCell">
        <Style.Setters>
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style.Setters>
    </Style>

    <Style x:Key="LogItemDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Style.Triggers>

            <!--  Debug  -->
            <DataTrigger Binding="{Binding Path=LevelIndex, Mode=OneWay}" Value="1">
                <Setter Property="Background" Value="{StaticResource DebugLevelColor}" />
            </DataTrigger>

            <!--  Info  -->
            <DataTrigger Binding="{Binding Path=LevelIndex, Mode=OneWay}" Value="2">
                <Setter Property="Background" Value="{StaticResource InfoLevelColor}" />
            </DataTrigger>

            <!--  Warn  -->
            <DataTrigger Binding="{Binding Path=LevelIndex, Mode=OneWay}" Value="3">
                <Setter Property="Background" Value="{StaticResource WarnLevelColor}" />
            </DataTrigger>

            <!--  Error  -->
            <DataTrigger Binding="{Binding Path=LevelIndex, Mode=OneWay}" Value="4">
                <Setter Property="Background" Value="{StaticResource ErrorLevelColor}" />
            </DataTrigger>

            <!--  Fatal  -->
            <DataTrigger Binding="{Binding Path=LevelIndex, Mode=OneWay}" Value="5">
                <Setter Property="Background" Value="{StaticResource FatalLevelColor}" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <!--  RADIO BUTTONS  -->

    <Style x:Key="tbRbStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="borderRbStyle"
        BasedOn="{StaticResource DefaultBorderStyle}"
        TargetType="Border">
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <Border
        x:Key="RadioButtonAll"
        Background="Transparent"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectAll}">
                <TextBlock Style="{StaticResource tbRbStyle}" Text="ALL" />
            </RadioButton>
        </DockPanel>
    </Border>

    <Border
        x:Key="RadioButtonDebug"
        Background="{StaticResource DebugLevelColor}"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectDebug}">
                <TextBlock
                    VerticalAlignment="Center"
                    Style="{StaticResource tbRbStyle}"
                    Text="DEBUG" />

            </RadioButton>
        </DockPanel>
    </Border>

    <Border
        x:Key="RadioButtonInfo"
        Background="{StaticResource InfoLevelColor}"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectInfo}">
                <TextBlock Style="{StaticResource tbRbStyle}" Text="INFO" />
            </RadioButton>
        </DockPanel>
    </Border>

    <Border
        x:Key="RadioButtonWarn"
        Background="{StaticResource WarnLevelColor}"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectWarn}">
                <TextBlock Style="{StaticResource tbRbStyle}" Text="WARN" />
            </RadioButton>
        </DockPanel>
    </Border>

    <Border
        x:Key="RadioButtonError"
        Background="{StaticResource ErrorLevelColor}"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectError}">
                <TextBlock Style="{StaticResource tbRbStyle}" Text="ERROR" />
            </RadioButton>
        </DockPanel>
    </Border>

    <Border
        x:Key="RadioButtonFatal"
        Background="{StaticResource FatalLevelColor}"
        Style="{StaticResource borderRbStyle}">
        <DockPanel LastChildFill="True">
            <RadioButton
                DockPanel.Dock="Left"
                GroupName="Selection"
                IsChecked="{Binding Path=SelectFatal}">
                <TextBlock Style="{StaticResource tbRbStyle}" Text="FATAL" />
            </RadioButton>
        </DockPanel>
    </Border>

    <!--  ROUND TEXTBOX  -->
    <Style x:Key="RoundWatermarkTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="21" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}" />
        <Setter Property="FontStyle" Value="Italic" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Padding" Value="5,3,3,3" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="BorderBase"
                            Background="WhiteSmoke"
                            BorderBrush="Gray"
                            BorderThickness="1.4,1.4,1,1"
                            CornerRadius="5" />
                        <Label
                            x:Name="TextPrompt"
                            Padding="5,3,3,3"
                            Content="{TemplateBinding Tag}"
                            Focusable="False"
                            FontStyle="Oblique"
                            Foreground="Gray"
                            Visibility="Collapsed" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="0"
                            Foreground="{DynamicResource OutsideFontColor}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="TextPrompt" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderBase" Property="BorderBrush" Value="LightGreen" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>