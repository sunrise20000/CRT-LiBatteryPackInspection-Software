<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DataGridTransform">

    <local:ListBoxItemSelector x:Key="itemSelector" />

    <Style x:Key="ParamWithExpander" TargetType="{x:Type Expander}">
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <RotateTransform Angle="-90" />
                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                </TransformGroup>
            </Setter.Value>
        </Setter>


    </Style>

    <Style x:Key="PoppingExpander" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <Grid>
                        <ToggleButton
                            x:Name="HeaderHolder"
                            Content="{TemplateBinding Header}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
                        <Popup x:Name="ContentHolder" Placement="Bottom">
                            <Border
                                Background="Aqua"
                                BorderBrush="LightBlue"
                                BorderThickness="1">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="HeaderHolder" Property="IsChecked" Value="True">
                            <Setter TargetName="ContentHolder" Property="IsOpen" Value="True" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TestButton" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="test" />

    </Style>

</ResourceDictionary>